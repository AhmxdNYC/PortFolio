const Contact = require("../model/Contact")
const { sendContactEmail } = require("../mail/mailer")

// Get All (Read)
const serveContacts = async (req, res) => {
  const contactsList = await Contact.list()
  res.send(contactsList)
}

// Get One (Read)
const serveContact = async (req, res) => {
  const { id } = req.params
  const contact = await Contact.find(Number(id))

  if (!contact) return res.status(404).send(`No contact with the id ${id}`)
  res.send(contact)
}

// Create
const createContact = async (req, res) => {
  const { name, email, message } = req.body
  try {
    const newContact = await Contact.create({ name, email, message })
    if (!newContact) {
      return res.status(500).send("Failed to create contact")
    }

    // Attempt to send an email
    await sendContactEmail({ name, email, message })
    res.status(201).send(newContact)
  } catch (error) {
    console.error("Failed to create contact or send email:", error)
    // Decide whether to send a generic error message or specify the error
    res.status(500).send("Failed to process your request")
  }
}

// Update
const updateContact = async (req, res) => {
  const { contactName } = req.body
  const { id } = req.params
  const updatedContact = await Contact.editName(Number(id), contactName)
  // sendStatus sends just the status with no message body
  if (!updatedContact) return res.sendStatus(404)
  res.send(updatedContact)
}

// Delete
const deleteContact = async (req, res) => {
  const { id } = req.params
  const didDelete = await Contact.delete(Number(id))
  const statusCode = didDelete ? 204 : 404
  res.sendStatus(statusCode)
}

module.exports = {
  serveContacts,
  serveContact,
  createContact,
  updateContact,
  deleteContact,
}
